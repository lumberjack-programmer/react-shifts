{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Projects\\\\React\\\\react-shifts\\\\src\\\\components\\\\InputData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './InputData.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst totalValuesCalculated = [{\n  overallHours: 0,\n  overallSalary: 0\n}];\n\nconst InputData = props => {\n  _s();\n\n  const [dayEntered, setDayEntered] = useState('');\n  const [startTimeEntered, setStartTimeEntered] = useState('');\n  const [offTimeEntered, setOffTimeEntered] = useState('');\n  const [breakStartEntered, setBreakStartEntered] = useState('');\n  const [breakFinishEntered, setBreakFinishEntered] = useState('');\n  const [addTotalValues, setTotalValues] = useState(''); // const [addStuffButton, setAddStuffButton] = useState('');\n\n  const dayChangeHandler = event => {\n    setDayEntered(event.target.value);\n  };\n\n  const startTimeChangeHandler = event => {\n    setStartTimeEntered(event.target.value);\n  };\n\n  const offTimeChangeHandler = event => {\n    setOffTimeEntered(event.target.value);\n  };\n\n  const breakStartChangeHandler = event => {\n    setBreakStartEntered(event.target.value);\n  };\n\n  const breakFinishChangeHandler = event => {\n    setBreakFinishEntered(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const startTime = new Date(dayEntered + ' ' + startTimeEntered);\n    const offTime = new Date(dayEntered + ' ' + offTimeEntered);\n    const breakStartTime = new Date(dayEntered + ' ' + breakStartEntered);\n    const breakFinishTime = new Date(dayEntered + ' ' + breakFinishEntered);\n    const totalStartMinutes = startTime.getHours() * 60 + startTime.getMinutes();\n    const totalOffMinutes = offTime.getHours() * 60 + offTime.getMinutes();\n    const totalStartBreakMinutes = breakStartTime.getHours() * 60 + breakStartTime.getMinutes();\n    const totalOffBreakMinutes = breakFinishTime.getHours() * 60 + breakFinishTime.getMinutes();\n    const resultHours = Math.floor((totalOffMinutes - totalStartMinutes - (totalOffBreakMinutes - totalStartBreakMinutes)) / 60);\n    const resultMinutes = (totalOffMinutes - totalStartMinutes - (totalOffBreakMinutes - totalStartBreakMinutes)) % 60;\n    const totalResult = `${resultHours}h ${resultMinutes}m`;\n    const totalSalary = `${resultHours * 20 + resultMinutes * 0.33} zl`;\n    const overallMinutes = totalOffMinutes - totalStartMinutes - (totalOffBreakMinutes - totalStartBreakMinutes);\n    const overallSalary = resultHours * 20 + resultMinutes * 0.33;\n    const inputDataObject = {\n      id: Math.random().toString(),\n      date: dayEntered,\n      startWorkTime: startTimeEntered,\n      offWorkTime: offTimeEntered,\n      breakStart: breakStartEntered,\n      breakFinish: breakFinishEntered,\n      hours: totalResult,\n      salary: totalSalary\n    };\n    props.onAddInputData(inputDataObject, onlyMinutes, onlySalary);\n    setDayEntered('');\n    setBreakFinishEntered('');\n    setBreakStartEntered('');\n    setOffTimeEntered('');\n    setStartTimeEntered('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Day:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-name\",\n        type: \"date\",\n        value: dayEntered,\n        onChange: dayChangeHandler,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Start Work Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-name\",\n        type: \"time\",\n        value: startTimeEntered,\n        id: \"appt\",\n        name: \"appt\",\n        min: \"05:00\",\n        max: \"23:00\",\n        onChange: startTimeChangeHandler,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"label\",\n        children: [\"Off Work Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-name\",\n          type: \"time\",\n          value: offTimeEntered,\n          id: \"appt\",\n          name: \"appt\",\n          min: \"05:00\",\n          max: \"23:00\",\n          onChange: offTimeChangeHandler,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Break Start:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-name\",\n        type: \"time\",\n        value: breakStartEntered,\n        id: \"appt\",\n        name: \"appt\",\n        min: \"06:00\",\n        max: \"22:00\",\n        onChange: breakStartChangeHandler,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Break Finish:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-name\",\n        type: \"time\",\n        value: breakFinishEntered,\n        id: \"appt\",\n        name: \"appt\",\n        min: \"06:00\",\n        max: \"22:00\",\n        onChange: breakFinishChangeHandler,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button-submit\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 8\n  }, this);\n};\n\n_s(InputData, \"xzKa1azpwDSs4dXy1t1VZBdTMhY=\");\n\n_c = InputData;\nexport default InputData;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputData\");","map":{"version":3,"sources":["D:/Desktop/Projects/React/react-shifts/src/components/InputData.js"],"names":["React","useState","totalValuesCalculated","overallHours","overallSalary","InputData","props","dayEntered","setDayEntered","startTimeEntered","setStartTimeEntered","offTimeEntered","setOffTimeEntered","breakStartEntered","setBreakStartEntered","breakFinishEntered","setBreakFinishEntered","addTotalValues","setTotalValues","dayChangeHandler","event","target","value","startTimeChangeHandler","offTimeChangeHandler","breakStartChangeHandler","breakFinishChangeHandler","submitHandler","preventDefault","startTime","Date","offTime","breakStartTime","breakFinishTime","totalStartMinutes","getHours","getMinutes","totalOffMinutes","totalStartBreakMinutes","totalOffBreakMinutes","resultHours","Math","floor","resultMinutes","totalResult","totalSalary","overallMinutes","inputDataObject","id","random","toString","date","startWorkTime","offWorkTime","breakStart","breakFinish","hours","salary","onAddInputData","onlyMinutes","onlySalary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './InputData.css';\r\n\r\nconst totalValuesCalculated = [{\r\n    overallHours: 0,\r\n    overallSalary: 0\r\n}];\r\nconst InputData = (props) => {\r\n    \r\n    const [dayEntered, setDayEntered] = useState('');\r\n\r\n    const [startTimeEntered, setStartTimeEntered] = useState('');\r\n    const [offTimeEntered, setOffTimeEntered] = useState('');\r\n\r\n    const [breakStartEntered, setBreakStartEntered] = useState('');\r\n    const [breakFinishEntered, setBreakFinishEntered] = useState('');\r\n\r\n\r\n    const [addTotalValues, setTotalValues] = useState('');\r\n\r\n    \r\n    // const [addStuffButton, setAddStuffButton] = useState('');\r\n\r\n    \r\n    const dayChangeHandler = event => {\r\n        setDayEntered(event.target.value);\r\n    };\r\n\r\n    const startTimeChangeHandler = event => {\r\n        setStartTimeEntered(event.target.value);\r\n    };\r\n\r\n    const offTimeChangeHandler = event => { \r\n        setOffTimeEntered(event.target.value);\r\n\r\n    };\r\n\r\n    const breakStartChangeHandler = event => {\r\n        setBreakStartEntered(event.target.value);\r\n    };\r\n\r\n    const breakFinishChangeHandler = event => {\r\n        setBreakFinishEntered(event.target.value);\r\n    };\r\n\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n  \r\n            const startTime = new Date(dayEntered + ' ' + startTimeEntered);\r\n            const offTime = new Date(dayEntered + ' ' + offTimeEntered);\r\n\r\n            \r\n            \r\n            const breakStartTime = new Date(dayEntered + ' ' + breakStartEntered);\r\n            const breakFinishTime = new Date(dayEntered + ' ' + breakFinishEntered);\r\n          \r\n\r\n\r\n           const totalStartMinutes = (startTime.getHours() * 60) + startTime.getMinutes();\r\n           const totalOffMinutes = (offTime.getHours() * 60) + offTime.getMinutes();\r\n\r\n           const totalStartBreakMinutes = ((breakStartTime.getHours() * 60) + breakStartTime.getMinutes());\r\n           const totalOffBreakMinutes = ((breakFinishTime.getHours() * 60) + breakFinishTime.getMinutes());\r\n\r\n           const resultHours = Math.floor(((totalOffMinutes - totalStartMinutes) - (totalOffBreakMinutes - totalStartBreakMinutes)) / 60);\r\n           const resultMinutes = (((totalOffMinutes - totalStartMinutes) - (totalOffBreakMinutes - totalStartBreakMinutes)) % 60);\r\n\r\n           const totalResult = `${resultHours}h ${resultMinutes}m`;\r\n            \r\n           const totalSalary = `${resultHours * 20 + resultMinutes * 0.33} zl`;\r\n\r\n           const overallMinutes = (totalOffMinutes - totalStartMinutes) - (totalOffBreakMinutes - totalStartBreakMinutes);\r\n           const overallSalary = resultHours * 20 + resultMinutes * 0.33;\r\n           \r\n\r\n           \r\n           \r\n     \r\n        \r\n\r\n\r\n        const inputDataObject = {\r\n            id: Math.random().toString(),\r\n            date: dayEntered,\r\n            startWorkTime: startTimeEntered,\r\n            offWorkTime: offTimeEntered,\r\n            breakStart: breakStartEntered,\r\n            breakFinish: breakFinishEntered,\r\n            hours: totalResult,\r\n            salary: totalSalary\r\n        };\r\n\r\n\r\n\r\n        props.onAddInputData(inputDataObject, onlyMinutes, onlySalary);\r\n        setDayEntered('');\r\n        setBreakFinishEntered('');\r\n        setBreakStartEntered('');\r\n        setOffTimeEntered('');\r\n        setStartTimeEntered('');\r\n\r\n      \r\n    };\r\n\r\n    \r\n\r\n    return (\r\n       <div>\r\n        <form onSubmit={submitHandler}>\r\n            <label className=\"label\">\r\n              Day:\r\n           </label>\r\n              <input className=\"input-name\" type=\"date\" value={dayEntered} onChange={dayChangeHandler} required/>\r\n            \r\n            <label className=\"label\">\r\n            Start Work Time:\r\n                </label>\r\n            <input className=\"input-name\" type=\"time\" value={startTimeEntered} id=\"appt\" name=\"appt\" min=\"05:00\" max=\"23:00\" onChange={startTimeChangeHandler}  required></input>\r\n            \r\n            <label class=\"label\">\r\n            Off Work Time:\r\n            <input className=\"input-name\"  type=\"time\" value={offTimeEntered} id=\"appt\" name=\"appt\" min=\"05:00\" max=\"23:00\" onChange={offTimeChangeHandler} required></input>\r\n            </label>\r\n   \r\n            <label  className=\"label\">\r\n            Break Start:\r\n                </label>\r\n            <input className=\"input-name\"  type=\"time\" value={breakStartEntered} id=\"appt\" name=\"appt\" min=\"06:00\" max=\"22:00\" onChange={breakStartChangeHandler} required></input>\r\n            \r\n            <label className=\"label\">\r\n            Break Finish:\r\n                </label>\r\n            <input className=\"input-name\"  type=\"time\" value={breakFinishEntered} id=\"appt\" name=\"appt\" min=\"06:00\" max=\"22:00\" onChange={breakFinishChangeHandler} required></input>\r\n            \r\n           <input className=\"button-submit\" type=\"submit\" />\r\n          </form>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputData;"]},"metadata":{},"sourceType":"module"}